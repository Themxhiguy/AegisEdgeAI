diff --git a/Makefile.am b/Makefile.am
index 32280b67..7215e6f6 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -900,21 +900,14 @@ endef
 
 define make_tss_user_and_group
     if test -z "${DESTDIR}"; then \
-        if type -p groupadd > /dev/null; then \
-            id -g tss 2>/dev/null || groupadd --system tss; \
-        else \
-            id -g tss 2>/dev/null || \
-            addgroup --system tss; \
-        fi && \
-        if type -p useradd > /dev/null; then \
-            id -u tss 2>/dev/null || \
-            useradd --system --home-dir / --shell `type -p nologin` \
-                             --no-create-home -g tss tss; \
-        else \
-            id -u tss 2>/dev/null || \
-            adduser --system --home / --shell `type -p nologin` \
-                    --no-create-home --ingroup tss tss; \
-        fi; \
+        dscl . -create /Groups/tss \
+        dscl . -create /Groups/tss PrimaryGroupID 550 \
+        dscl . -create /Users/tss \
+        dscl . -create /Users/tss UserShell /usr/bin/false \
+        dscl . -create /Users/tss NFSHomeDirectory / \
+        dscl . -create /Users/tss RealName "TPM2 TSS User" \
+        dscl . -create /Users/tss UniqueID 550 \
+        dscl . -create /Users/tss PrimaryGroupID 550
     fi
 endef
 
@@ -925,7 +918,7 @@ endef
 define set_tss_permissions
     (chown -R tss:tss "$1") && \
     (chmod -R 2775 "$1") && \
-    (setfacl -m default:group:tss:rwx "$1")
+    (chmod +a "`stat -f "%Su" /dev/console` allow read,write,delete,add_file,add_subdirectory,file_inherit,directory_inherit" "$1") 
 endef
 
 define make_fapi_dirs
@@ -1007,7 +1000,7 @@ if SYSD_SYSUSERS
 	@test -n "$(DESTDIR)" || ( systemd-sysusers $(sysusersdir)/tpm2-tss.conf || echo "WARNING Failed to create the tss user and group" )
 else
 	@echo "call make_tss_user_and_group"
-	@$(call make_tss_user_and_group) || echo "WARNING Failed to create the tss user and group"
+#	@$(call make_tss_user_and_group) || echo "WARNING Failed to create the tss user and group"
 endif
 if SYSD_TMPFILES
 	@test -n "$(DESTDIR)" || echo "systemd-tmpfiles --create $(tmpfilesdir)/tpm2-tss-fapi.conf"
diff --git a/configure.ac b/configure.ac
index f1e99a85..16032eda 100644
--- a/configure.ac
+++ b/configure.ac
@@ -671,17 +671,6 @@ AM_CONDITIONAL([SYSD_SYSUSERS], [test "x$systemd_sysusers" = "xyes" && test "x$s
 AC_CHECK_PROG(systemd_tmpfiles, systemd-tmpfiles, yes)
 AM_CONDITIONAL([SYSD_TMPFILES], [test "x$systemd_tmpfiles" = "xyes" && test "x$tmpfilesdir" != "xno"])
 
-# Check all tools used by make install
-AS_IF([test "$HOSTOS" = "Linux" && test "x$systemd_sysusers" != "xyes"],
-    [ AC_CHECK_PROG(useradd, useradd, yes)
-      AC_CHECK_PROG(groupadd, groupadd, yes)
-      AC_CHECK_PROG(adduser, adduser, yes)
-      AC_CHECK_PROG(addgroup, addgroup, yes)
-      AS_IF([test "x$addgroup" != "xyes" && test "x$groupadd" != "xyes" ],
-         [AC_MSG_ERROR([addgroup or groupadd are needed.])])
-      AS_IF([test "x$adduser" != "xyes" && test "x$useradd" != "xyes" ],
-         [AC_MSG_ERROR([adduser or useradd are needed.])])])
-
 AC_SUBST([PATH])
 
 dnl --------- Doxy Gen -----------------------
diff --git a/src/tss2-fapi/efi_event.h b/src/tss2-fapi/efi_event.h
index 0e1cb7d6..aa512fb9 100644
--- a/src/tss2-fapi/efi_event.h
+++ b/src/tss2-fapi/efi_event.h
@@ -2,7 +2,13 @@
 #ifndef TCG_EFI_EVENT_H
 #define TCG_EFI_EVENT_H 1
 
-#include <uchar.h>        // for char16_t
+#if __has_include(<uchar.h>)
+#include <uchar.h>
+#else
+typedef uint16_t char16_t;
+typedef uint32_t char32_t;
+#endif
+
 #include <uuid/uuid.h>    // for uuid_t
 
 #include "tss2_common.h"  // for UINT32, BYTE, UINT64, UINT8, UINT16
diff --git a/src/tss2-fapi/ifapi_eventlog_system.c b/src/tss2-fapi/ifapi_eventlog_system.c
index f27a7200..9e015b7b 100644
--- a/src/tss2-fapi/ifapi_eventlog_system.c
+++ b/src/tss2-fapi/ifapi_eventlog_system.c
@@ -14,7 +14,13 @@
 #include <string.h>                // for strlen, strncmp, memcmp, strcmp
 #include <strings.h>               // for strncasecmp
 #include <sys/types.h>             // for uint
-#include <uchar.h>                 // for char16_t
+
+#if __has_include(<uchar.h>)
+#include <uchar.h>
+#else
+typedef uint16_t char16_t;
+typedef uint32_t char32_t;
+#endif
 
 #include "efi_event.h"             // for TCG_EVENT, TCG_EVENT2, TCG_EVENT_H...
 #include "fapi_crypto.h"           // for ifapi_hash_get_digest_size
diff --git a/src/tss2-fapi/ifapi_json_eventlog_serialize.c b/src/tss2-fapi/ifapi_json_eventlog_serialize.c
index 5a94156c..2e827e7e 100644
--- a/src/tss2-fapi/ifapi_json_eventlog_serialize.c
+++ b/src/tss2-fapi/ifapi_json_eventlog_serialize.c
@@ -13,7 +13,14 @@
 #include <stdio.h>                  // for fclose, fread, fopen, sprintf, FILE
 #include <stdlib.h>                 // for free, calloc, malloc, realloc
 #include <string.h>                 // for strlen, memcpy, strerror, memset
-#include <uchar.h>                  // for char16_t, c16rtomb
+
+#if __has_include(<uchar.h>)
+#include <uchar.h>
+#else
+typedef uint16_t char16_t;
+typedef uint32_t char32_t;
+#endif
+
 #include <uuid/uuid.h>              // for uuid_unparse_lower, uuid_t
 #include <wchar.h>                  // for mbstate_t
 
@@ -45,6 +52,30 @@
         return r;  \
     }
 
+
+size_t c16rtomb(char *s, char16_t c16, mbstate_t *ps) {
+    (void)ps;
+    if (!s) {
+        return 4;  // Max UTF-8 char size
+    }
+    if (c16 < 0x80) {
+        s[0] = (char)c16;
+        return 1;
+    } else if (c16 < 0x800) {
+        s[0] = 0xC0 | (c16 >> 6);
+        s[1] = 0x80 | (c16 & 0x3F);
+        return 2;
+    } else if (0xD800 <= c16 && c16 <= 0xDFFF) {
+        errno = EILSEQ; // Surrogate half - invalid here
+        return (size_t)-1;
+    } else {
+        s[0] = 0xE0 | (c16 >> 12);
+        s[1] = 0x80 | ((c16 >> 6) & 0x3F);
+        s[2] = 0x80 | (c16 & 0x3F);
+        return 3;
+    }
+}
+
 bool ifapi_pcr_used(uint32_t pcr, const uint32_t *pcr_list,  size_t pcr_list_size)
 {
     size_t i;
