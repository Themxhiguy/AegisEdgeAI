version: '3.8'

services:
  swtpm:
    build: .
    container_name: swtpm-service
    command: ["python", "start_swtpm.py"]
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - SWTPM_DIR=/app/.swtpm/ztpm
      - SWTPM_PORT=2321
      - SWTPM_CTRL=2322
      - TPM2TOOLS_TCTI=swtpm:host=127.0.0.1,port=2321
    volumes:
      - swtpm_data:/app/.swtpm
    networks:
      - opentelemetry-network

  opentelemetry-microservices:
    build: .
    container_name: opentelemetry-microservices
    depends_on:
      - swtpm
    ports:
      - "8442:8442"  # Agent
      - "8443:8443"  # Gateway
      - "8444:8444"  # Collector
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - SSL_ENABLED=true
      - TPM2TOOLS_TCTI=swtpm:host=swtpm,port=2321
      - OTEL_ENDPOINT=http://localhost:4317
    volumes:
      - ./app.ctx:/app/app.ctx:ro
      - ./primary.ctx:/app/primary.ctx:ro
      - ./ak.ctx:/app/ak.ctx:ro
      - ./ek.ctx:/app/ek.ctx:ro
      - ./certs:/app/certs
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost:8442/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - opentelemetry-network

  # Optional: Add a simple OpenTelemetry Collector for testing
  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter
    restart: unless-stopped
    networks:
      - opentelemetry-network

volumes:
  swtpm_data:

networks:
  opentelemetry-network:
    driver: bridge
